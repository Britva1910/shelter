 export const showSelfAssessment = () => {
     alert('Привет! Что бы было проще проверить - в консоль я вывел свою самооценку по критериям! Спасибо за проверку!');

     var str = '  В случае, если при проверке возникнут вопросы, пожалуйста свяжитесь со мной - mezolit#0539 (Discord)!';
     var style = ['padding: 1rem;',
         'background: linear-gradient( gold, orangered);',
         'text-shadow: 0 2px orangered;',
         'font: 1.3rem/3 Georgia;',
         'color: white;'
     ].join('');

     console.log('%c%s', style, str);
     const text = `
     Всего я успел реализовать:
     1. Burger menu
     2. Popup
     3. Carousel
     Думаю, что данный функциионал соответтсвует ТЗ и оцениваю в 60 баллов.

     Сразу говорю, пагинация не работает ее можно не проверять.

     Далее по требованиям ТЗ:
     Burger menu
     [+] При ширине страницы width < 768px реализовано бургер-меню на обеих страницах: +20.
     [+] Бургер-меню реализовано на двух сраницах
     [+] Бургер-меню присутствует на странице только при width < 768px.
     [+] При нажатии на бургер-меню, с правой стороны выезжает блок шириной 320px и высотой на всю высоту экрана, в котором вертикально расположены и центрированы элементы меню. 
     [+] При открытии бургер-меню плавно выезжает из-за правой границы экрана (slide-in).
     [+] При открытии бургер-меню иконка меню плавно поворачивается на 90 градусов (rotate).
     [+] После открытия бургер-меню вертикальный скролл основной страницы становится неактивным. 
     [+] В элементах меню действуют те же правила активности и неактивности, как и в меню на большей ширине экрана.
     [+] Область, выступающая за 320px, затемнена.
     [+] При нажатии вне границ меню на затемненную область или на кнопку с иконкой меню, бургер-меню заезжает обратно.
     [+] При закрытии бургер-меню плавно заезжает за правую (или верхнюю) границу экрана (slide-out).
     [+] При закрытии бургер-меню иконка меню плавно поворачивается обратно на 90 градусов (rotate).
     [+] После закрытия бургер-меню вертикальный скролл вновь становится активным.
     [+] При нажатии на "About the shelter" (на странице main) или "Our pets" (на странице our pets) страница оказывается в начальном положении, меню закрывается.
     [+] При нажатии на "About the shelter" (на странице our pets) или "Our pets" (на странице main) происходит переход на соответствующую страницу.
     [+] При нажатии на "Help" страница прокручивается к блоку help с последующим закрытием меню (со страницы main), или перебрасывает нас к блоку help страницы main (со страницы our pets)
     [+] При нажатии на "Contacts" страница прокручивается к блоку Footer, меню закрывается.

     Popup
     [+] Попап реализован на обеих страницах: +15.
     [+] При нажатии на любое место карточки (блока) с описанием конкретного питомца появляется попап, его контент без учета крестика в правом верхнем углу центрируется по ширине и высоте экрана.
     [+] Остальная часть страницы вне попапа затемняется.
     [+] После открытия попапа вертикальный скролл становится неактивным. 
     [+] При нажатии на окно (блок) попапа ничего не происходит.
     [+] При наведении мышкой на затемненную область или кнопку с крестиком, т.е. при событии hover, кнопка получает эффект наведения. Другими словами: кнопка интерактивная.
     [+] При нажатии вне границ попапа на затемненную область или на кнопку с крестиком, попап и затемнение исчезают.
     [+] После закрытия вертикальный скролл вновь становится активным.
     [+] Картинка питомца присутствует при 768px <= width и отсутствует при 768px > width.

     Carousel
     [+] При нажатии кнопок влево или вправо происходит перелистывание слайдов: +25.
     [+] При нажатии на стрелки происходит переход к новому блоку элементов.
     [+] Смена блоков происходит с анимацией карусели. Время анимации и тайминг функция значения не имеют.
     [+] Карусель бесконечна, не имеет границ, т.е. можно нажимать влево и вправо сколько угодно раз, и каждый раз контент в блоках будет новый. При этом допускается сохранять 1 предшествующий блок, к которому можно вернуться, прокрутив карусель в обратную сторону (если сохраняется состояние двух и более предшествующих блоков - это ошибка!).
     [+] Каждый новый слайд содержит псевдослучайный набор карточек животных, т.е. формируется из исходных объектов в случайном порядке со следующими условиями:
        * в текущем блоке слайда карточки с питомцами не повторяются.
        * в следующем блоке нет дублирования карточек с текущим блоком. Например в слайдере из 3 элементов, следующий выезжающий слайд будет содержать 3 новых карточки питомца, таких, каких не было среди 3х карточек на предыдущем уехавшем слайде.
     [+] Производится три проверки на трех разных значениях ширины окна браузера, с перезагрузкой страницы после установки ширины:
        * при 1280px <= width в блоке слайда 3 карточки питомцев. При нажатии на стрелку все 3 карточки заменяются на новые.
        * при 768px <= width < 1280px в блоке слайда 2 карточки питомцев. При нажатии на стрелку обе карточки заменяются на новые.
        * при width < 768px в блоке слайда 1 карточка питомца. При нажатии на стрелку карточка меняется на новую.
     `
     console.log(text);

 }